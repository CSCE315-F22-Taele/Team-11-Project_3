{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar _createClass = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _classCallCheck = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.safebrowsing_v4 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nvar googleapis_common_1 = require(\"googleapis-common\");\nvar safebrowsing_v4;\n(function (safebrowsing_v4) {\n  /**\n   * Safe Browsing API\n   *\n   * Enables client applications to check web resources (most commonly URLs) against Google-generated lists of unsafe web resources. The Safe Browsing APIs are for non-commercial use only. If you need to use APIs to detect malicious URLs for commercial purposes – meaning “for sale or revenue-generating purposes” – please refer to the Web Risk API.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const safebrowsing = google.safebrowsing('v4');\n   * ```\n   */\n  var Safebrowsing = function Safebrowsing(options, google) {\n    _classCallCheck(this, Safebrowsing);\n    this.context = {\n      _options: options || {},\n      google: google\n    };\n    this.encodedFullHashes = new Resource$Encodedfullhashes(this.context);\n    this.encodedUpdates = new Resource$Encodedupdates(this.context);\n    this.fullHashes = new Resource$Fullhashes(this.context);\n    this.threatHits = new Resource$Threathits(this.context);\n    this.threatLists = new Resource$Threatlists(this.context);\n    this.threatListUpdates = new Resource$Threatlistupdates(this.context);\n    this.threatMatches = new Resource$Threatmatches(this.context);\n  };\n  safebrowsing_v4.Safebrowsing = Safebrowsing;\n  var Resource$Encodedfullhashes = /*#__PURE__*/function () {\n    function Resource$Encodedfullhashes(context) {\n      _classCallCheck(this, Resource$Encodedfullhashes);\n      this.context = context;\n    }\n    _createClass(Resource$Encodedfullhashes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/encodedFullHashes/{encodedRequest}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['encodedRequest'],\n          pathParams: ['encodedRequest'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Encodedfullhashes;\n  }();\n  safebrowsing_v4.Resource$Encodedfullhashes = Resource$Encodedfullhashes;\n  var Resource$Encodedupdates = /*#__PURE__*/function () {\n    function Resource$Encodedupdates(context) {\n      _classCallCheck(this, Resource$Encodedupdates);\n      this.context = context;\n    }\n    _createClass(Resource$Encodedupdates, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/encodedUpdates/{encodedRequest}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['encodedRequest'],\n          pathParams: ['encodedRequest'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Encodedupdates;\n  }();\n  safebrowsing_v4.Resource$Encodedupdates = Resource$Encodedupdates;\n  var Resource$Fullhashes = /*#__PURE__*/function () {\n    function Resource$Fullhashes(context) {\n      _classCallCheck(this, Resource$Fullhashes);\n      this.context = context;\n    }\n    _createClass(Resource$Fullhashes, [{\n      key: \"find\",\n      value: function find(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/fullHashes:find').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Fullhashes;\n  }();\n  safebrowsing_v4.Resource$Fullhashes = Resource$Fullhashes;\n  var Resource$Threathits = /*#__PURE__*/function () {\n    function Resource$Threathits(context) {\n      _classCallCheck(this, Resource$Threathits);\n      this.context = context;\n    }\n    _createClass(Resource$Threathits, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/threatHits').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Threathits;\n  }();\n  safebrowsing_v4.Resource$Threathits = Resource$Threathits;\n  var Resource$Threatlists = /*#__PURE__*/function () {\n    function Resource$Threatlists(context) {\n      _classCallCheck(this, Resource$Threatlists);\n      this.context = context;\n    }\n    _createClass(Resource$Threatlists, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/threatLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Threatlists;\n  }();\n  safebrowsing_v4.Resource$Threatlists = Resource$Threatlists;\n  var Resource$Threatlistupdates = /*#__PURE__*/function () {\n    function Resource$Threatlistupdates(context) {\n      _classCallCheck(this, Resource$Threatlistupdates);\n      this.context = context;\n    }\n    _createClass(Resource$Threatlistupdates, [{\n      key: \"fetch\",\n      value: function fetch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/threatListUpdates:fetch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Threatlistupdates;\n  }();\n  safebrowsing_v4.Resource$Threatlistupdates = Resource$Threatlistupdates;\n  var Resource$Threatmatches = /*#__PURE__*/function () {\n    function Resource$Threatmatches(context) {\n      _classCallCheck(this, Resource$Threatmatches);\n      this.context = context;\n    }\n    _createClass(Resource$Threatmatches, [{\n      key: \"find\",\n      value: function find(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/threatMatches:find').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Threatmatches;\n  }();\n  safebrowsing_v4.Resource$Threatmatches = Resource$Threatmatches;\n})(safebrowsing_v4 = exports.safebrowsing_v4 || (exports.safebrowsing_v4 = {}));","map":null,"metadata":{},"sourceType":"script"}