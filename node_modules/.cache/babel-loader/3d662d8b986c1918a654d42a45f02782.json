{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar _createClass = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _classCallCheck = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ideahub_v1alpha = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nvar googleapis_common_1 = require(\"googleapis-common\");\nvar ideahub_v1alpha;\n(function (ideahub_v1alpha) {\n  /**\n   * Idea Hub API\n   *\n   * This is an invitation-only API.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const ideahub = google.ideahub('v1alpha');\n   * ```\n   */\n  var Ideahub = function Ideahub(options, google) {\n    _classCallCheck(this, Ideahub);\n    this.context = {\n      _options: options || {},\n      google: google\n    };\n    this.ideas = new Resource$Ideas(this.context);\n    this.platforms = new Resource$Platforms(this.context);\n  };\n  ideahub_v1alpha.Ideahub = Ideahub;\n  var Resource$Ideas = /*#__PURE__*/function () {\n    function Resource$Ideas(context) {\n      _classCallCheck(this, Resource$Ideas);\n      this.context = context;\n    }\n    _createClass(Resource$Ideas, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha/ideas').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Ideas;\n  }();\n  ideahub_v1alpha.Resource$Ideas = Resource$Ideas;\n  var Resource$Platforms = function Resource$Platforms(context) {\n    _classCallCheck(this, Resource$Platforms);\n    this.context = context;\n    this.properties = new Resource$Platforms$Properties(this.context);\n  };\n  ideahub_v1alpha.Resource$Platforms = Resource$Platforms;\n  var Resource$Platforms$Properties = function Resource$Platforms$Properties(context) {\n    _classCallCheck(this, Resource$Platforms$Properties);\n    this.context = context;\n    this.ideaActivities = new Resource$Platforms$Properties$Ideaactivities(this.context);\n    this.ideas = new Resource$Platforms$Properties$Ideas(this.context);\n    this.ideaStates = new Resource$Platforms$Properties$Ideastates(this.context);\n    this.locales = new Resource$Platforms$Properties$Locales(this.context);\n    this.topicStates = new Resource$Platforms$Properties$Topicstates(this.context);\n  };\n  ideahub_v1alpha.Resource$Platforms$Properties = Resource$Platforms$Properties;\n  var Resource$Platforms$Properties$Ideaactivities = /*#__PURE__*/function () {\n    function Resource$Platforms$Properties$Ideaactivities(context) {\n      _classCallCheck(this, Resource$Platforms$Properties$Ideaactivities);\n      this.context = context;\n    }\n    _createClass(Resource$Platforms$Properties$Ideaactivities, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha/{+parent}/ideaActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Platforms$Properties$Ideaactivities;\n  }();\n  ideahub_v1alpha.Resource$Platforms$Properties$Ideaactivities = Resource$Platforms$Properties$Ideaactivities;\n  var Resource$Platforms$Properties$Ideas = /*#__PURE__*/function () {\n    function Resource$Platforms$Properties$Ideas(context) {\n      _classCallCheck(this, Resource$Platforms$Properties$Ideas);\n      this.context = context;\n    }\n    _createClass(Resource$Platforms$Properties$Ideas, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha/{+parent}/ideas').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Platforms$Properties$Ideas;\n  }();\n  ideahub_v1alpha.Resource$Platforms$Properties$Ideas = Resource$Platforms$Properties$Ideas;\n  var Resource$Platforms$Properties$Ideastates = /*#__PURE__*/function () {\n    function Resource$Platforms$Properties$Ideastates(context) {\n      _classCallCheck(this, Resource$Platforms$Properties$Ideastates);\n      this.context = context;\n    }\n    _createClass(Resource$Platforms$Properties$Ideastates, [{\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Platforms$Properties$Ideastates;\n  }();\n  ideahub_v1alpha.Resource$Platforms$Properties$Ideastates = Resource$Platforms$Properties$Ideastates;\n  var Resource$Platforms$Properties$Locales = /*#__PURE__*/function () {\n    function Resource$Platforms$Properties$Locales(context) {\n      _classCallCheck(this, Resource$Platforms$Properties$Locales);\n      this.context = context;\n    }\n    _createClass(Resource$Platforms$Properties$Locales, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha/{+parent}/locales').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Platforms$Properties$Locales;\n  }();\n  ideahub_v1alpha.Resource$Platforms$Properties$Locales = Resource$Platforms$Properties$Locales;\n  var Resource$Platforms$Properties$Topicstates = /*#__PURE__*/function () {\n    function Resource$Platforms$Properties$Topicstates(context) {\n      _classCallCheck(this, Resource$Platforms$Properties$Topicstates);\n      this.context = context;\n    }\n    _createClass(Resource$Platforms$Properties$Topicstates, [{\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Platforms$Properties$Topicstates;\n  }();\n  ideahub_v1alpha.Resource$Platforms$Properties$Topicstates = Resource$Platforms$Properties$Topicstates;\n})(ideahub_v1alpha = exports.ideahub_v1alpha || (exports.ideahub_v1alpha = {}));","map":null,"metadata":{},"sourceType":"script"}