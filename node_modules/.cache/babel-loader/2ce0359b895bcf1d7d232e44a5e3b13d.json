{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useEffect } from 'react';\nimport { NativeModules, Platform, DeviceEventEmitter, StyleSheet } from 'react-native';\nimport { RNGoogleSigninButton } from './RNGoogleSiginButton';\nvar RNGoogleSignin = NativeModules.RNGoogleSignin;\nexport var GoogleSigninButton = function GoogleSigninButton(_ref) {\n  var onPress = _ref.onPress,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, [\"onPress\", \"style\"]);\n  useEffect(function () {\n    if (Platform.OS === 'ios') {\n      return;\n    }\n    var clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', function () {\n      onPress === null || onPress === void 0 ? void 0 : onPress();\n    });\n    return function () {\n      clickListener.remove();\n    };\n  }, [onPress]);\n  var recommendedSize = function () {\n    switch (rest.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  }(); // @ts-ignore style prop incompatible\n\n  return /*#__PURE__*/React.createElement(RNGoogleSigninButton, _extends({}, rest, {\n    onPress: onPress,\n    style: [recommendedSize, style]\n  }));\n};\nGoogleSigninButton.Size = {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE\n};\nGoogleSigninButton.Color = {\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT\n}; // sizes according to https://developers.google.com/identity/sign-in/ios/reference/Classes/GIDSignInButton\n\nvar styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48\n  },\n  standardSize: {\n    width: 230,\n    height: 48\n  },\n  wideSize: {\n    width: 312,\n    height: 48\n  }\n});","map":null,"metadata":{},"sourceType":"module"}