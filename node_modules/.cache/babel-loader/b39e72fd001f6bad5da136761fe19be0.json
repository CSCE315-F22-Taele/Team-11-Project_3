{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar _createClass = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _classCallCheck = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.analyticsreporting_v4 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nvar googleapis_common_1 = require(\"googleapis-common\");\nvar analyticsreporting_v4;\n(function (analyticsreporting_v4) {\n  /**\n   * Analytics Reporting API\n   *\n   * Accesses Analytics report data.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const analyticsreporting = google.analyticsreporting('v4');\n   * ```\n   */\n  var Analyticsreporting = function Analyticsreporting(options, google) {\n    _classCallCheck(this, Analyticsreporting);\n    this.context = {\n      _options: options || {},\n      google: google\n    };\n    this.reports = new Resource$Reports(this.context);\n    this.userActivity = new Resource$Useractivity(this.context);\n  };\n  analyticsreporting_v4.Analyticsreporting = Analyticsreporting;\n  var Resource$Reports = /*#__PURE__*/function () {\n    function Resource$Reports(context) {\n      _classCallCheck(this, Resource$Reports);\n      this.context = context;\n    }\n    _createClass(Resource$Reports, [{\n      key: \"batchGet\",\n      value: function batchGet(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://analyticsreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/reports:batchGet').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Reports;\n  }();\n  analyticsreporting_v4.Resource$Reports = Resource$Reports;\n  var Resource$Useractivity = /*#__PURE__*/function () {\n    function Resource$Useractivity(context) {\n      _classCallCheck(this, Resource$Useractivity);\n      this.context = context;\n    }\n    _createClass(Resource$Useractivity, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://analyticsreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v4/userActivity:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Useractivity;\n  }();\n  analyticsreporting_v4.Resource$Useractivity = Resource$Useractivity;\n})(analyticsreporting_v4 = exports.analyticsreporting_v4 || (exports.analyticsreporting_v4 = {}));","map":null,"metadata":{},"sourceType":"script"}