{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar _classCallCheck = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.oauth2_v2 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nvar googleapis_common_1 = require(\"googleapis-common\");\nvar oauth2_v2;\n(function (oauth2_v2) {\n  /**\n   * Google OAuth2 API\n   *\n   * Obtains end-user authorization grants for use with other Google APIs.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const oauth2 = google.oauth2('v2');\n   * ```\n   */\n  var Oauth2 = /*#__PURE__*/function () {\n    function Oauth2(options, google) {\n      _classCallCheck(this, Oauth2);\n      this.context = {\n        _options: options || {},\n        google: google\n      };\n      this.userinfo = new Resource$Userinfo(this.context);\n    }\n    _createClass(Oauth2, [{\n      key: \"tokeninfo\",\n      value: function tokeninfo(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/oauth2/v2/tokeninfo').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Oauth2;\n  }();\n  oauth2_v2.Oauth2 = Oauth2;\n  var Resource$Userinfo = /*#__PURE__*/function () {\n    function Resource$Userinfo(context) {\n      _classCallCheck(this, Resource$Userinfo);\n      this.context = context;\n      this.v2 = new Resource$Userinfo$V2(this.context);\n    }\n    _createClass(Resource$Userinfo, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/oauth2/v2/userinfo').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Userinfo;\n  }();\n  oauth2_v2.Resource$Userinfo = Resource$Userinfo;\n  var Resource$Userinfo$V2 = function Resource$Userinfo$V2(context) {\n    _classCallCheck(this, Resource$Userinfo$V2);\n    this.context = context;\n    this.me = new Resource$Userinfo$V2$Me(this.context);\n  };\n  oauth2_v2.Resource$Userinfo$V2 = Resource$Userinfo$V2;\n  var Resource$Userinfo$V2$Me = /*#__PURE__*/function () {\n    function Resource$Userinfo$V2$Me(context) {\n      _classCallCheck(this, Resource$Userinfo$V2$Me);\n      this.context = context;\n    }\n    _createClass(Resource$Userinfo$V2$Me, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/userinfo/v2/me').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Userinfo$V2$Me;\n  }();\n  oauth2_v2.Resource$Userinfo$V2$Me = Resource$Userinfo$V2$Me;\n})(oauth2_v2 = exports.oauth2_v2 || (exports.oauth2_v2 = {}));","map":null,"metadata":{},"sourceType":"script"}