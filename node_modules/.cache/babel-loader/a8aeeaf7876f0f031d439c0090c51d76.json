{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar _createClass = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _classCallCheck = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.playdeveloperreporting_v1alpha1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nvar googleapis_common_1 = require(\"googleapis-common\");\nvar playdeveloperreporting_v1alpha1;\n(function (playdeveloperreporting_v1alpha1) {\n  /**\n   * Google Play Developer Reporting API\n   *\n   *\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const playdeveloperreporting = google.playdeveloperreporting('v1alpha1');\n   * ```\n   */\n  var Playdeveloperreporting = function Playdeveloperreporting(options, google) {\n    _classCallCheck(this, Playdeveloperreporting);\n    this.context = {\n      _options: options || {},\n      google: google\n    };\n    this.anomalies = new Resource$Anomalies(this.context);\n    this.vitals = new Resource$Vitals(this.context);\n  };\n  playdeveloperreporting_v1alpha1.Playdeveloperreporting = Playdeveloperreporting;\n  var Resource$Anomalies = /*#__PURE__*/function () {\n    function Resource$Anomalies(context) {\n      _classCallCheck(this, Resource$Anomalies);\n      this.context = context;\n    }\n    _createClass(Resource$Anomalies, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/anomalies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Anomalies;\n  }();\n  playdeveloperreporting_v1alpha1.Resource$Anomalies = Resource$Anomalies;\n  var Resource$Vitals = function Resource$Vitals(context) {\n    _classCallCheck(this, Resource$Vitals);\n    this.context = context;\n    this.anrrate = new Resource$Vitals$Anrrate(this.context);\n    this.crashrate = new Resource$Vitals$Crashrate(this.context);\n    this.errors = new Resource$Vitals$Errors(this.context);\n    this.excessivewakeuprate = new Resource$Vitals$Excessivewakeuprate(this.context);\n    this.stuckbackgroundwakelockrate = new Resource$Vitals$Stuckbackgroundwakelockrate(this.context);\n  };\n  playdeveloperreporting_v1alpha1.Resource$Vitals = Resource$Vitals;\n  var Resource$Vitals$Anrrate = /*#__PURE__*/function () {\n    function Resource$Vitals$Anrrate(context) {\n      _classCallCheck(this, Resource$Vitals$Anrrate);\n      this.context = context;\n    }\n    _createClass(Resource$Vitals$Anrrate, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"query\",\n      value: function query(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}:query').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Vitals$Anrrate;\n  }();\n  playdeveloperreporting_v1alpha1.Resource$Vitals$Anrrate = Resource$Vitals$Anrrate;\n  var Resource$Vitals$Crashrate = /*#__PURE__*/function () {\n    function Resource$Vitals$Crashrate(context) {\n      _classCallCheck(this, Resource$Vitals$Crashrate);\n      this.context = context;\n    }\n    _createClass(Resource$Vitals$Crashrate, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"query\",\n      value: function query(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}:query').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Vitals$Crashrate;\n  }();\n  playdeveloperreporting_v1alpha1.Resource$Vitals$Crashrate = Resource$Vitals$Crashrate;\n  var Resource$Vitals$Errors = function Resource$Vitals$Errors(context) {\n    _classCallCheck(this, Resource$Vitals$Errors);\n    this.context = context;\n    this.counts = new Resource$Vitals$Errors$Counts(this.context);\n    this.issues = new Resource$Vitals$Errors$Issues(this.context);\n    this.reports = new Resource$Vitals$Errors$Reports(this.context);\n  };\n  playdeveloperreporting_v1alpha1.Resource$Vitals$Errors = Resource$Vitals$Errors;\n  var Resource$Vitals$Errors$Counts = /*#__PURE__*/function () {\n    function Resource$Vitals$Errors$Counts(context) {\n      _classCallCheck(this, Resource$Vitals$Errors$Counts);\n      this.context = context;\n    }\n    _createClass(Resource$Vitals$Errors$Counts, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"query\",\n      value: function query(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}:query').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Vitals$Errors$Counts;\n  }();\n  playdeveloperreporting_v1alpha1.Resource$Vitals$Errors$Counts = Resource$Vitals$Errors$Counts;\n  var Resource$Vitals$Errors$Issues = /*#__PURE__*/function () {\n    function Resource$Vitals$Errors$Issues(context) {\n      _classCallCheck(this, Resource$Vitals$Errors$Issues);\n      this.context = context;\n    }\n    _createClass(Resource$Vitals$Errors$Issues, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/errorIssues:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Vitals$Errors$Issues;\n  }();\n  playdeveloperreporting_v1alpha1.Resource$Vitals$Errors$Issues = Resource$Vitals$Errors$Issues;\n  var Resource$Vitals$Errors$Reports = /*#__PURE__*/function () {\n    function Resource$Vitals$Errors$Reports(context) {\n      _classCallCheck(this, Resource$Vitals$Errors$Reports);\n      this.context = context;\n    }\n    _createClass(Resource$Vitals$Errors$Reports, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+parent}/errorReports:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Vitals$Errors$Reports;\n  }();\n  playdeveloperreporting_v1alpha1.Resource$Vitals$Errors$Reports = Resource$Vitals$Errors$Reports;\n  var Resource$Vitals$Excessivewakeuprate = /*#__PURE__*/function () {\n    function Resource$Vitals$Excessivewakeuprate(context) {\n      _classCallCheck(this, Resource$Vitals$Excessivewakeuprate);\n      this.context = context;\n    }\n    _createClass(Resource$Vitals$Excessivewakeuprate, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"query\",\n      value: function query(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}:query').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Vitals$Excessivewakeuprate;\n  }();\n  playdeveloperreporting_v1alpha1.Resource$Vitals$Excessivewakeuprate = Resource$Vitals$Excessivewakeuprate;\n  var Resource$Vitals$Stuckbackgroundwakelockrate = /*#__PURE__*/function () {\n    function Resource$Vitals$Stuckbackgroundwakelockrate(context) {\n      _classCallCheck(this, Resource$Vitals$Stuckbackgroundwakelockrate);\n      this.context = context;\n    }\n    _createClass(Resource$Vitals$Stuckbackgroundwakelockrate, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"query\",\n      value: function query(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://playdeveloperreporting.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1alpha1/{+name}:query').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Vitals$Stuckbackgroundwakelockrate;\n  }();\n  playdeveloperreporting_v1alpha1.Resource$Vitals$Stuckbackgroundwakelockrate = Resource$Vitals$Stuckbackgroundwakelockrate;\n})(playdeveloperreporting_v1alpha1 = exports.playdeveloperreporting_v1alpha1 || (exports.playdeveloperreporting_v1alpha1 = {}));","map":null,"metadata":{},"sourceType":"script"}