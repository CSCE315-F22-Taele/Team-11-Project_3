{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar _createClass = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _classCallCheck = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fcm_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nvar googleapis_common_1 = require(\"googleapis-common\");\nvar fcm_v1;\n(function (fcm_v1) {\n  /**\n   * Firebase Cloud Messaging API\n   *\n   * FCM send API that provides a cross-platform messaging solution to reliably deliver messages at no cost.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const fcm = google.fcm('v1');\n   * ```\n   */\n  var Fcm = function Fcm(options, google) {\n    _classCallCheck(this, Fcm);\n    this.context = {\n      _options: options || {},\n      google: google\n    };\n    this.projects = new Resource$Projects(this.context);\n  };\n  fcm_v1.Fcm = Fcm;\n  var Resource$Projects = function Resource$Projects(context) {\n    _classCallCheck(this, Resource$Projects);\n    this.context = context;\n    this.messages = new Resource$Projects$Messages(this.context);\n  };\n  fcm_v1.Resource$Projects = Resource$Projects;\n  var Resource$Projects$Messages = /*#__PURE__*/function () {\n    function Resource$Projects$Messages(context) {\n      _classCallCheck(this, Resource$Projects$Messages);\n      this.context = context;\n    }\n    _createClass(Resource$Projects$Messages, [{\n      key: \"send\",\n      value: function send(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://fcm.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/{+parent}/messages:send').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Projects$Messages;\n  }();\n  fcm_v1.Resource$Projects$Messages = Resource$Projects$Messages;\n})(fcm_v1 = exports.fcm_v1 || (exports.fcm_v1 = {}));","map":null,"metadata":{},"sourceType":"script"}