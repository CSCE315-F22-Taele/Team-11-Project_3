{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar _createClass = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _classCallCheck = require(\"C:\\\\Users\\\\hholt\\\\Downloads\\\\Team-11-Project_3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assuredworkloads_v1beta1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nvar googleapis_common_1 = require(\"googleapis-common\");\nvar assuredworkloads_v1beta1;\n(function (assuredworkloads_v1beta1) {\n  /**\n   * Assured Workloads API\n   *\n   *\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const assuredworkloads = google.assuredworkloads('v1beta1');\n   * ```\n   */\n  var Assuredworkloads = function Assuredworkloads(options, google) {\n    _classCallCheck(this, Assuredworkloads);\n    this.context = {\n      _options: options || {},\n      google: google\n    };\n    this.organizations = new Resource$Organizations(this.context);\n    this.projects = new Resource$Projects(this.context);\n  };\n  assuredworkloads_v1beta1.Assuredworkloads = Assuredworkloads;\n  var Resource$Organizations = function Resource$Organizations(context) {\n    _classCallCheck(this, Resource$Organizations);\n    this.context = context;\n    this.locations = new Resource$Organizations$Locations(this.context);\n  };\n  assuredworkloads_v1beta1.Resource$Organizations = Resource$Organizations;\n  var Resource$Organizations$Locations = function Resource$Organizations$Locations(context) {\n    _classCallCheck(this, Resource$Organizations$Locations);\n    this.context = context;\n    this.operations = new Resource$Organizations$Locations$Operations(this.context);\n    this.workloads = new Resource$Organizations$Locations$Workloads(this.context);\n  };\n  assuredworkloads_v1beta1.Resource$Organizations$Locations = Resource$Organizations$Locations;\n  var Resource$Organizations$Locations$Operations = /*#__PURE__*/function () {\n    function Resource$Organizations$Locations$Operations(context) {\n      _classCallCheck(this, Resource$Organizations$Locations$Operations);\n      this.context = context;\n    }\n    _createClass(Resource$Organizations$Locations$Operations, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+name}/operations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Organizations$Locations$Operations;\n  }();\n  assuredworkloads_v1beta1.Resource$Organizations$Locations$Operations = Resource$Organizations$Locations$Operations;\n  var Resource$Organizations$Locations$Workloads = /*#__PURE__*/function () {\n    function Resource$Organizations$Locations$Workloads(context) {\n      _classCallCheck(this, Resource$Organizations$Locations$Workloads);\n      this.context = context;\n      this.organizations = new Resource$Organizations$Locations$Workloads$Organizations(this.context);\n      this.violations = new Resource$Organizations$Locations$Workloads$Violations(this.context);\n    }\n    _createClass(Resource$Organizations$Locations$Workloads, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+parent}/workloads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+parent}/workloads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"restrictAllowedResources\",\n      value: function restrictAllowedResources(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+name}:restrictAllowedResources').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Organizations$Locations$Workloads;\n  }();\n  assuredworkloads_v1beta1.Resource$Organizations$Locations$Workloads = Resource$Organizations$Locations$Workloads;\n  var Resource$Organizations$Locations$Workloads$Organizations = function Resource$Organizations$Locations$Workloads$Organizations(context) {\n    _classCallCheck(this, Resource$Organizations$Locations$Workloads$Organizations);\n    this.context = context;\n    this.locations = new Resource$Organizations$Locations$Workloads$Organizations$Locations(this.context);\n  };\n  assuredworkloads_v1beta1.Resource$Organizations$Locations$Workloads$Organizations = Resource$Organizations$Locations$Workloads$Organizations;\n  var Resource$Organizations$Locations$Workloads$Organizations$Locations = function Resource$Organizations$Locations$Workloads$Organizations$Locations(context) {\n    _classCallCheck(this, Resource$Organizations$Locations$Workloads$Organizations$Locations);\n    this.context = context;\n    this.workloads = new Resource$Organizations$Locations$Workloads$Organizations$Locations$Workloads(this.context);\n  };\n  assuredworkloads_v1beta1.Resource$Organizations$Locations$Workloads$Organizations$Locations = Resource$Organizations$Locations$Workloads$Organizations$Locations;\n  var Resource$Organizations$Locations$Workloads$Organizations$Locations$Workloads = /*#__PURE__*/function () {\n    function Resource$Organizations$Locations$Workloads$Organizations$Locations$Workloads(context) {\n      _classCallCheck(this, Resource$Organizations$Locations$Workloads$Organizations$Locations$Workloads);\n      this.context = context;\n    }\n    _createClass(Resource$Organizations$Locations$Workloads$Organizations$Locations$Workloads, [{\n      key: \"analyzeWorkloadMove\",\n      value: function analyzeWorkloadMove(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+source}/{+target}:analyzeWorkloadMove').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['source', 'target'],\n          pathParams: ['source', 'target'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Organizations$Locations$Workloads$Organizations$Locations$Workloads;\n  }();\n  assuredworkloads_v1beta1.Resource$Organizations$Locations$Workloads$Organizations$Locations$Workloads = Resource$Organizations$Locations$Workloads$Organizations$Locations$Workloads;\n  var Resource$Organizations$Locations$Workloads$Violations = /*#__PURE__*/function () {\n    function Resource$Organizations$Locations$Workloads$Violations(context) {\n      _classCallCheck(this, Resource$Organizations$Locations$Workloads$Violations);\n      this.context = context;\n    }\n    _createClass(Resource$Organizations$Locations$Workloads$Violations, [{\n      key: \"acknowledge\",\n      value: function acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+name}:acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+parent}/violations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['parent'],\n          pathParams: ['parent'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Organizations$Locations$Workloads$Violations;\n  }();\n  assuredworkloads_v1beta1.Resource$Organizations$Locations$Workloads$Violations = Resource$Organizations$Locations$Workloads$Violations;\n  var Resource$Projects = function Resource$Projects(context) {\n    _classCallCheck(this, Resource$Projects);\n    this.context = context;\n    this.organizations = new Resource$Projects$Organizations(this.context);\n  };\n  assuredworkloads_v1beta1.Resource$Projects = Resource$Projects;\n  var Resource$Projects$Organizations = function Resource$Projects$Organizations(context) {\n    _classCallCheck(this, Resource$Projects$Organizations);\n    this.context = context;\n    this.locations = new Resource$Projects$Organizations$Locations(this.context);\n  };\n  assuredworkloads_v1beta1.Resource$Projects$Organizations = Resource$Projects$Organizations;\n  var Resource$Projects$Organizations$Locations = function Resource$Projects$Organizations$Locations(context) {\n    _classCallCheck(this, Resource$Projects$Organizations$Locations);\n    this.context = context;\n    this.workloads = new Resource$Projects$Organizations$Locations$Workloads(this.context);\n  };\n  assuredworkloads_v1beta1.Resource$Projects$Organizations$Locations = Resource$Projects$Organizations$Locations;\n  var Resource$Projects$Organizations$Locations$Workloads = /*#__PURE__*/function () {\n    function Resource$Projects$Organizations$Locations$Workloads(context) {\n      _classCallCheck(this, Resource$Projects$Organizations$Locations$Workloads);\n      this.context = context;\n    }\n    _createClass(Resource$Projects$Organizations$Locations$Workloads, [{\n      key: \"analyzeWorkloadMove\",\n      value: function analyzeWorkloadMove(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://assuredworkloads.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+project}/{+target}:analyzeWorkloadMove').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['project', 'target'],\n          pathParams: ['project', 'target'],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Projects$Organizations$Locations$Workloads;\n  }();\n  assuredworkloads_v1beta1.Resource$Projects$Organizations$Locations$Workloads = Resource$Projects$Organizations$Locations$Workloads;\n})(assuredworkloads_v1beta1 = exports.assuredworkloads_v1beta1 || (exports.assuredworkloads_v1beta1 = {}));","map":null,"metadata":{},"sourceType":"script"}